"use strict";(self.webpackChunkplugin_changelog=self.webpackChunkplugin_changelog||[]).push([[800],{78642:(e,l,n)=>{n.r(l),n.d(l,{ChangelogComponent:()=>y});var t=n(74848),s=(n(28437),n(27606)),a=n(289),o=n(77060),c=n(85881),i=n(46681),r=n(85789),g=n(45210),h=n(25010),p=n(86687),d=n(30353),m=n(22097),u=n(24705),j=n(63184);const x=({changes:e})=>{const l=e.map((e=>(e.change_types=[e.change_types.join(", ")],e.apps=[e.apps.join(", ")],e)));return(0,t.jsx)(h.X,{title:"Example Changelog",options:{search:!0,paging:!0},columns:[{title:"Commit",field:"commit"},{title:"Merged At",field:"merged_at"},{title:"Error",field:"error"},{title:"Change Types",field:"change_types"},{title:"Apps",field:"apps"}],data:l})},f=()=>{const e=(0,m.useApi)(m.configApiRef),{value:l,loading:n,error:s}=(0,u.A)((async()=>{const l=await fetch(`${e.getString("backend.baseUrl")}/api/proxy/inscope-resources/resources/yaml/configmap-change-log.yaml`).catch((e=>e)).then((e=>e));console.log(l),l.ok;const n=await l.text();let t,s;try{t=(0,j.qg)(n)}catch{}console.log(t);try{s=JSON.parse(t.data["change-log.json"])}catch{}return console.log(s),s.items}),[]);return n?(0,t.jsx)(p.k,{}):s?(0,t.jsx)(d._,{error:s}):(0,t.jsx)(x,{changes:l||[]})},y=()=>(0,t.jsxs)(a.Y,{themeId:"tool",children:[(0,t.jsxs)(o.Y,{title:"Welcome to changelog!",subtitle:"A log of changes",children:[(0,t.jsx)(c.S,{label:"Owner",value:"Team X"}),(0,t.jsx)(c.S,{label:"Lifecycle",value:"Alpha"})]}),(0,t.jsxs)(i.U,{children:[(0,t.jsx)(r.d,{title:"Changelog",children:(0,t.jsx)(g.Y,{children:"A log of changes."})}),(0,t.jsx)(s.A,{container:!0,spacing:3,direction:"column",children:(0,t.jsx)(s.A,{item:!0,children:(0,t.jsx)(f,{})})})]})]})}}]);
//# sourceMappingURL=800.e52aa903.chunk.js.map